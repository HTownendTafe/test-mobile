{"ast":null,"code":"import { getRequest, deleteRequest, postRequest, putRequest, getRequestWithCaching } from \"./Api\";\nvar apiUrl = 'http://localhost:5062/api';\nvar useCache = true;\nexport function RoiGetDepartments() {\n  return getRequest(`${apiUrl}/Departments`).then(function (response) {\n    return response;\n  });\n}\nexport function RoiGetPeople() {\n  return getRequest(`${apiUrl}/People`).then(function (response) {\n    return response;\n  });\n}\nexport function RoiGetPerson(id) {\n  console.log(`${apiUrl}/People/${id}`);\n  if (useCache) {\n    return getRequestWithCaching(`${apiUrl}/People/${id}`).then(function (response) {\n      return response;\n    });\n  } else {\n    return getRequest(`${apiUrl}/People/${id}`).then(function (response) {\n      return response;\n    });\n  }\n}\nexport function RoiDeletePerson(id) {\n  return deleteRequest(`${apiUrl}/People/${id}`, {\n    id: id\n  }).then(function (response) {\n    return true;\n  });\n}\nexport function RoiAddPerson(name, phone, departmentId, street, city, state, zip, country) {\n  return postRequest(`${apiUrl}/People`, {\n    name: name,\n    phone: phone,\n    departmentId: departmentId,\n    street: street,\n    city: city,\n    state: state,\n    zip: zip,\n    country: country\n  }).then(function (response) {\n    return response;\n  });\n}\nexport function RoiUpdatePerson(id, name, phone, departmentId, street, city, state, zip, country) {\n  return putRequest(`${apiUrl}/People/${id}`, {\n    id: id,\n    name: name,\n    phone: phone,\n    departmentId: departmentId,\n    street: street,\n    city: city,\n    state: state,\n    zip: zip,\n    country: country\n  }).then(function (response) {\n    return true;\n  });\n}","map":{"version":3,"names":["getRequest","deleteRequest","postRequest","putRequest","getRequestWithCaching","apiUrl","useCache","RoiGetDepartments","then","response","RoiGetPeople","RoiGetPerson","id","console","log","RoiDeletePerson","RoiAddPerson","name","phone","departmentId","street","city","state","zip","country","RoiUpdatePerson"],"sources":["C:/project/test-mobile/utils/RoiApi.js"],"sourcesContent":["import { getRequest, deleteRequest, postRequest, putRequest, getRequestWithCaching } from './Api';\r\n\r\n// Root URL for the API backend\r\nconst apiUrl = 'http://localhost:5062/api';\r\nconst useCache = true;\r\n//cache.ttlMinutes = 60;\r\n\r\n// Get all departments\r\n// export function RoiGetDepartments() {\r\n//   // Call API endpoint: GET /Departments\r\n//   console.log(`${apiUrl}/Departments`);\r\n//   if (useCache) {\r\n//     return getRequestWithCaching(`${apiUrl}/Departments`).then((response) => {\r\n//       // If request/response is successful, return JSON data\r\n//       return response;\r\n//     });\r\n//   } else {\r\n//     return getRequest(`${apiUrl}/Departments`).then((response) => {\r\n//       // If request/response is successful, return JSON data\r\n//       return response;\r\n//     });\r\n//   }\r\n// }\r\nexport function RoiGetDepartments() {\r\n  \r\n  return getRequest(`${apiUrl}/Departments`)\r\n  .then((response) => {\r\n    // If request/response is successful, return JSON data\r\n    return response;\r\n  });\r\n  \r\n}\r\n\r\n// Get all people\r\n//export function RoiGetPeople() {\r\n  // Call API endpoint: GET /People\r\n//  console.log(`${apiUrl}/People`);\r\n//  if (useCache) {\r\n//    return getRequestWithCaching(`${apiUrl}/People`).then((response) => {\r\n//      // If request/response is successful, return JSON data\r\n//      return response;\r\n//    });\r\n//  } else {\r\n//    return getRequest(`${apiUrl}/People`).then((response) => {\r\n//      // If request/response is successful, return JSON data\r\n//      return response;\r\n//    });\r\n//  }\r\n//}\r\n\r\n//Get all people\r\nexport function RoiGetPeople() {\r\n  // Call API endpoint: GET /People\r\n  return getRequest(`${apiUrl}/People`)\r\n    .then((response) => {\r\n    // If request/response is successful, return JSON data\r\n    return response;\r\n  });\r\n}\r\n\r\n// Get person\r\nexport function RoiGetPerson(id) {\r\n  // Call API endpoint: GET /Person/{id}\r\n  console.log(`${apiUrl}/People/${id}`);\r\n  if (useCache) {\r\n    return getRequestWithCaching(`${apiUrl}/People/${id}`).then((response) => {\r\n      // If request/response is successful, return JSON data\r\n      return response;\r\n    });\r\n  } \r\n  else {\r\n    return getRequest(`${apiUrl}/People/${id}`).then((response) => {\r\n      // If request/response is successful, return JSON data\r\n      return response;\r\n    });\r\n  }\r\n}\r\n\r\n// Delete person\r\nexport function RoiDeletePerson(id) {\r\n  // Call API endpoint: DELETE /People/{id}\r\n  return deleteRequest(`${apiUrl}/People/${id}`, { id }).then((response) => {\r\n    // If request/response is successful, return true (no data in response)\r\n    return true;\r\n  });\r\n}\r\n\r\n// Add person\r\nexport function RoiAddPerson(name, phone, departmentId, street, city, state, zip, country) {\r\n  // Call API endpoint: POST /Person\r\n  return postRequest(`${apiUrl}/People`, { name, phone, departmentId, street, city, state, zip, country }).then((response) => {\r\n    // If request/response is successful, return JSON data\r\n    return response;\r\n  });\r\n}\r\n\r\n// Update person\r\nexport function RoiUpdatePerson(id, name, phone, departmentId, street, city, state, zip, country) {\r\n  // Call API endpoint: PUT /Person/{id}\r\n  return putRequest(`${apiUrl}/People/${id}`, { id, name, phone, departmentId, street, city, state, zip, country }).then((response) => {\r\n    // If request/response is successful, return true (no data in response)\r\n    return true;\r\n  });\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,qBAAqB;AAGlF,IAAMC,MAAM,GAAG,2BAA2B;AAC1C,IAAMC,QAAQ,GAAG,IAAI;AAmBrB,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAElC,OAAOP,UAAU,CAAE,GAAEK,MAAO,cAAa,CAAC,CACzCG,IAAI,CAAC,UAACC,QAAQ,EAAK;IAElB,OAAOA,QAAQ;EACjB,CAAC,CAAC;AAEJ;AAoBA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAE7B,OAAOV,UAAU,CAAE,GAAEK,MAAO,SAAQ,CAAC,CAClCG,IAAI,CAAC,UAACC,QAAQ,EAAK;IAEpB,OAAOA,QAAQ;EACjB,CAAC,CAAC;AACJ;AAGA,OAAO,SAASE,YAAYA,CAACC,EAAE,EAAE;EAE/BC,OAAO,CAACC,GAAG,CAAE,GAAET,MAAO,WAAUO,EAAG,EAAC,CAAC;EACrC,IAAIN,QAAQ,EAAE;IACZ,OAAOF,qBAAqB,CAAE,GAAEC,MAAO,WAAUO,EAAG,EAAC,CAAC,CAACJ,IAAI,CAAC,UAACC,QAAQ,EAAK;MAExE,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC,MACI;IACH,OAAOT,UAAU,CAAE,GAAEK,MAAO,WAAUO,EAAG,EAAC,CAAC,CAACJ,IAAI,CAAC,UAACC,QAAQ,EAAK;MAE7D,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ;AACF;AAGA,OAAO,SAASM,eAAeA,CAACH,EAAE,EAAE;EAElC,OAAOX,aAAa,CAAE,GAAEI,MAAO,WAAUO,EAAG,EAAC,EAAE;IAAEA,EAAE,EAAFA;EAAG,CAAC,CAAC,CAACJ,IAAI,CAAC,UAACC,QAAQ,EAAK;IAExE,OAAO,IAAI;EACb,CAAC,CAAC;AACJ;AAGA,OAAO,SAASO,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAEzF,OAAOtB,WAAW,CAAE,GAAEG,MAAO,SAAQ,EAAE;IAAEY,IAAI,EAAJA,IAAI;IAAEC,KAAK,EAALA,KAAK;IAAEC,YAAY,EAAZA,YAAY;IAAEC,MAAM,EAANA,MAAM;IAAEC,IAAI,EAAJA,IAAI;IAAEC,KAAK,EAALA,KAAK;IAAEC,GAAG,EAAHA,GAAG;IAAEC,OAAO,EAAPA;EAAQ,CAAC,CAAC,CAAChB,IAAI,CAAC,UAACC,QAAQ,EAAK;IAE1H,OAAOA,QAAQ;EACjB,CAAC,CAAC;AACJ;AAGA,OAAO,SAASgB,eAAeA,CAACb,EAAE,EAAEK,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAEhG,OAAOrB,UAAU,CAAE,GAAEE,MAAO,WAAUO,EAAG,EAAC,EAAE;IAAEA,EAAE,EAAFA,EAAE;IAAEK,IAAI,EAAJA,IAAI;IAAEC,KAAK,EAALA,KAAK;IAAEC,YAAY,EAAZA,YAAY;IAAEC,MAAM,EAANA,MAAM;IAAEC,IAAI,EAAJA,IAAI;IAAEC,KAAK,EAALA,KAAK;IAAEC,GAAG,EAAHA,GAAG;IAAEC,OAAO,EAAPA;EAAQ,CAAC,CAAC,CAAChB,IAAI,CAAC,UAACC,QAAQ,EAAK;IAEnI,OAAO,IAAI;EACb,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}